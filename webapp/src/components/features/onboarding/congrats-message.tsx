"use client";

import TGSPlayer from "@/components/ui/tgs-wrapper";
import { type TGSPlayerRef } from "@/components/ui/tgs-wrapper";
import Image from "next/image";
import { useRef, useEffect, useState } from "react";
import SubscriptionDrawer from "./drawer";

interface CongratsMessageProps {
  gift: {
    name: string;
    mediaUrl: string;
  };
}

export default function CongratsMessage({ gift }: CongratsMessageProps) {
  const playerRef = useRef<TGSPlayerRef>(null);
  const [isVisible, setIsVisible] = useState(false);

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
    const fadeTimer = setTimeout(() => {
      setIsVisible(true);
    }, 0);

    return () => clearTimeout(fadeTimer);
  }, []);

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–¥–∞—Ä–∫–∞ –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (isVisible && playerRef.current) {
      const timer = setTimeout(() => {
        console.log("üé¨ Playing gift animation:", gift.name);
        playerRef.current?.play();
      }, 500); // —É–≤–µ–ª–∏—á–∏–ª –∑–∞–¥–µ—Ä–∂–∫—É —á—Ç–æ–±—ã —Å–Ω–∞—á–∞–ª–∞ –ø–æ—è–≤–∏–ª—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç

      return () => clearTimeout(timer);
    }
  }, [isVisible, gift.mediaUrl]);

  return (
    <div
      className="text-center flex flex-col items-center justify-center"
      style={{
        opacity: isVisible ? 1 : 0,
        transition: "opacity 0.3s ease-out",
        transitionProperty: "opacity, transform",
        transitionDuration: "0.3s",
        transitionTimingFunction: "ease-out",
      }}
    >
      <h1 className="congrats-title font-serif uppercase">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h1>

      <div className="size-[255px] relative grid place-items-center my-5">
        <TGSPlayer
          ref={playerRef}
          className="relative z-20"
          src={gift.mediaUrl}
          playOnClick={false}
          playOnlyOnce={false}
          style={{
            width: 195,
            height: 195,
          }}
        />

        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∑–≤–µ–∑–¥—ã */}
        <Image
          src="/Star 3.svg"
          alt=""
          width={255}
          height={255}
          className="absolute"
        />
        <Image
          src="/Star 2.svg"
          alt=""
          width={255}
          height={255}
          className="absolute"
        />
        <Image
          src="/Star 1.svg"
          alt=""
          width={255}
          height={255}
          className="absolute"
        />
      </div>

      <p className="font-serif congrats-description max-w-[350px]">
        –í–∞–º –≤—ã–ø–∞–ª –ø–æ–¥–∞—Ä–æ–∫ ¬´{gift.name}¬ª! –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è, –ø—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π
        –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –µ—â—ë –±–æ–ª—å—à–µ –ø–æ–¥–∞—Ä–∫–æ–≤!
      </p>
      <SubscriptionDrawer
        trigger={
          <button className="w-full mt-4 primary-btn text-[#6E296D] text-nowrap">
            –ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫
          </button>
        }
      />
    </div>
  );
}
