// actions/admin/delete-demo-prize.ts
"use server";
import { JWTSession } from "@/lib/types/session";
import { withServerAuth } from "../auth/with-server-auth";
import {
  findDemoPrizeById,
  deleteDemoPrize as deleteDemoPrizeDb,
} from "database";
import { revalidatePath } from "next/cache";
import { deleteFromCloudinary } from "../cloudinary";

export type DeleteDemoPrizeResult =
  | { success: true; message: string }
  | { success: false; error: string };

async function _deleteDemoPrize(
  session: JWTSession,
  prizeId: number
): Promise<DeleteDemoPrizeResult> {
  console.log(`üóëÔ∏è [SERVER ACTION] –£–¥–∞–ª–µ–Ω–∏–µ –¥–µ–º–æ-–ø—Ä–∏–∑–∞ ID: ${prizeId}`);

  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –ø—Ä–∏–∑ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–∑ Cloudinary
    const existingPrize = await findDemoPrizeById(prizeId);

    if (!existingPrize) {
      console.log(`‚ö†Ô∏è [SERVER ACTION] –î–µ–º–æ-–ø—Ä–∏–∑ —Å ID ${prizeId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return {
        success: false,
        error: "–î–µ–º–æ-–ø—Ä–∏–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω",
      };
    }

    console.log(`üìÅ [SERVER ACTION] –ù–∞–π–¥–µ–Ω –ø—Ä–∏–∑: "${existingPrize.name}"`);

    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–∑ Cloudinary (–µ—Å–ª–∏ –µ—Å—Ç—å publicId)
    if (existingPrize.cloudinaryPublicId) {
      try {
        console.log(
          `‚òÅÔ∏è [SERVER ACTION] –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ Cloudinary: ${existingPrize.cloudinaryPublicId}`
        );
        await deleteFromCloudinary(existingPrize.cloudinaryPublicId);
        console.log(`‚úÖ [SERVER ACTION] –§–∞–π–ª —É–¥–∞–ª–µ–Ω –∏–∑ Cloudinary`);
      } catch (cloudinaryError) {
        console.warn(
          `‚ö†Ô∏è [SERVER ACTION] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–∑ Cloudinary:`,
          cloudinaryError
        );
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ë–î, –¥–∞–∂–µ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —É–¥–∞–ª–∏–ª—Å—è
      }
    } else {
      console.log(
        `üìã [SERVER ACTION] –£ –ø—Ä–∏–∑–∞ –Ω–µ—Ç cloudinaryPublicId, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞`
      );
    }

    // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ –ë–î
    console.log(`üíæ [SERVER ACTION] –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...`);
    await deleteDemoPrizeDb(prizeId);

    console.log(
      `üéâ [SERVER ACTION] –î–µ–º–æ-–ø—Ä–∏–∑ "${existingPrize.name}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`
    );

    // // –†–µ–≤–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    // revalidatePath("/admin/demo");
    // revalidatePath("/admin/demo/prizes");

    return {
      success: true,
      message: `–î–µ–º–æ-–ø—Ä–∏–∑ "${existingPrize.name}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`,
    };
  } catch (error) {
    console.error("‚ùå [SERVER ACTION] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–µ–º–æ-–ø—Ä–∏–∑–∞:", error);

    return {
      success: false,
      error:
        error instanceof Error ? error.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
    };
  }
}

export const deleteDemoPrize = withServerAuth(_deleteDemoPrize, {
  requireRole: "ADMIN",
});
