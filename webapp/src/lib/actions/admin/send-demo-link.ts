// actions/admin/send-demo-link.ts
"use server";
import { JWTSession } from "@/lib/types/session";
import { withServerAuth } from "../auth/with-server-auth";
import { findUserByTelegramId, findDemoPrizeById } from "database";
import {
  sendMessageToUser,
  createInlineKeyboard,
  createWebAppButton,
} from "@/lib/actions/bot";

export type SendDemoLinkResult =
  | { success: true; message: string }
  | { success: false; error: string };

async function _sendDemoLink(
  session: JWTSession,
  telegramId: string,
  prizeId: number | "random"
): Promise<SendDemoLinkResult> {
  console.log(
    `üì® [SERVER ACTION] –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–µ–º–æ-—Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId} –¥–ª—è –ø—Ä–∏–∑–∞ ${prizeId}`
  );

  try {
    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID
    console.log(
      `üë§ [SERVER ACTION] –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å telegramId: ${telegramId}`
    );
    const user = await findUserByTelegramId(telegramId);

    if (!user) {
      console.log(
        `‚ùå [SERVER ACTION] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegramId ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω`
      );
      return {
        success: false,
        error: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω`,
      };
    }

    console.log(
      `‚úÖ [SERVER ACTION] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${
        user.firstName || "–ë–µ–∑ –∏–º–µ–Ω–∏"
      } (@${user.username || "–±–µ–∑ username"})`
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ-–ø—Ä–∏–∑ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ "random"
    if (prizeId !== "random") {
      console.log(`üéÅ [SERVER ACTION] –ü–æ–∏—Å–∫ –¥–µ–º–æ-–ø—Ä–∏–∑–∞ —Å ID: ${prizeId}`);
      const demoPrize = await findDemoPrizeById(prizeId);

      if (!demoPrize) {
        console.log(`‚ùå [SERVER ACTION] –î–µ–º–æ-–ø—Ä–∏–∑ —Å ID ${prizeId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        return {
          success: false,
          error: `–î–µ–º–æ-–ø—Ä–∏–∑ —Å ID ${prizeId} –Ω–µ –Ω–∞–π–¥–µ–Ω`,
        };
      }

      if (!demoPrize.isActive) {
        console.log(`‚ùå [SERVER ACTION] –î–µ–º–æ-–ø—Ä–∏–∑ —Å ID ${prizeId} –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω`);
        return {
          success: false,
          error: `–î–µ–º–æ-–ø—Ä–∏–∑ "${demoPrize.name}" –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω`,
        };
      }

      console.log(`‚úÖ [SERVER ACTION] –î–µ–º–æ-–ø—Ä–∏–∑ –Ω–∞–π–¥–µ–Ω: "${demoPrize.name}"`);
    } else {
      console.log(`üé≤ [SERVER ACTION] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π –¥–µ–º–æ-–ø—Ä–∏–∑`);
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –¥–µ–º–æ-—Ä—É–ª–µ—Ç–∫–∏
    const baseUrl = process.env.WEBAPP_URL || "https://yourdomain.com";
    const demoUrl =
      prizeId === "random"
        ? `${baseUrl}/demo/random`
        : `${baseUrl}/demo/${prizeId}`;

    console.log(`üîó [SERVER ACTION] –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω URL: ${demoUrl}`);

    console.log(user);
    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `<b>–ü—Ä–∏–≤–µ—Ç, ${
      user.firstName || user.username || "–¥—Ä—É–≥"
    }! üéâ</b>

–õ–æ–≤–∏ –ø–æ–¥–∞—Ä–∫–∏, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –∑–≤—ë–∑–¥—ã –∏ —É—á–∞—Å—Ç–≤—É–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö
`;

    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–µ–º–æ-—Ä—É–ª–µ—Ç–∫–∏
    const webAppButton = await createWebAppButton(
      "üé∞ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
      demoUrl
    );

    const keyboard = await createInlineKeyboard([[webAppButton]]);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    console.log(`üì§ [SERVER ACTION] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é...`);
    const messageSent = await sendMessageToUser(telegramId, message, {
      parseMode: "HTML",
      keyboard: keyboard,
    });

    if (!messageSent) {
      console.error(
        `‚ùå [SERVER ACTION] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}`
      );
      return {
        success: false,
        error:
          "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.",
      };
    }

    console.log(
      `üéâ [SERVER ACTION] –î–µ–º–æ-—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}`
    );

    return {
      success: true,
      message: `–î–µ–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`,
    };
  } catch (error) {
    console.error("‚ùå [SERVER ACTION] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–µ–º–æ-—Å—Å—ã–ª–∫–∏:", error);

    return {
      success: false,
      error:
        error instanceof Error ? error.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
    };
  }
}

export const sendDemoLink = withServerAuth(_sendDemoLink, {
  requireRole: "ADMIN",
});
